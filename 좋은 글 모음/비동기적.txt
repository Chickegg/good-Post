JavaScript에서 말하는 비동기적(Asynchoronous)이란?
https://velog.io/@shitaikoto/Javascript-asynchronous
예를 들어 내가 즐겨하는 게임 리그오브레전드에서 리신궁플을 보게되면
궁이나가는 모션을 취하는 도중 점멸을 쓰게되면 점멸을쓰고 난위치에서 궁이 완료되게된다.

이것을 비동기적콤보라고 할 수 있다.

순서대로 진행되는것이아닌 효율적인 작업을 위해서 어떤 작업을 실행시키고
그 작업이 실행되는 동안 다른 작업을 수행할 수 있습니다.

비동기적 프로그래밍의 주요 사례들

- DOM Element의 이벤트 핸들러
마우스, 키보드 입력(onclick, onkeyup)등
페이지 로딩(DOMContentLoaded 등)
- 타이머
타이머 API (setTimeout 등)
애니메이션 API (requestAnimationFrame)
- 서버에 자원 요청 및 응답
fetch API
AJAX (XHR)

1.1 Callback 
2를 요소로 가진 길이가 4인 배열이 있다.
let = [2, 2, 2 ,2];
이 배열에 2를 곱한 값, 즉 각 요소에 2를 곱한 값을 반환할 때 우리는 배열의 
메소드중 map 또는 forEach를 사용할 수 있다.

let squarArr = arr.map((el) => el * 2);
console.log(squareArr) // [4, 4, 4, 4]

map 메소드는 인자로 함수(el) => el * 2 를 받는다.
이함수는 el을 입력인자로 받아, 각 요소 el에 2를 곱한값을 반환한다.

이처럼 고차함수의 인조라 전달되는 함수를 콜백(Callback) 함수라고 한다.
콜백 함수를 인자로 받은 함수를 Caller 함수라고 하며, map은 Caller가 된다.

(ele) => el * 2 는 Callback함수 .map()은 Caller 함수

const printString = (string, calback) => {
setTimeout (
() => {
console.log(string)
callback()
}, 1000)
}

printString이라는 함수를 만들고 string과 callback함수를 받는다.
이 함수는 setTimeout이라는 Web API를 사용해 1000ms (1sec) 후 입력인자로 받아온 string을 반환하고
callback 함수를 실행한다.

